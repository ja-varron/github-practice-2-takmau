/*
	Dark / Light theme variables and helpers
	- Usage (HTML): set <html data-theme="dark"> or <html data-theme="light"> OR add class .theme-dark / .theme-light to <body>
	- Prefer user's OS setting via prefers-color-scheme as default
	- Toggle persistence example (JS) provided in comments below
*/

/* Base (light) theme variables */
:root {
    --bg: #ffffff;
    --surface: #f8f9fb;
    --muted-surface: #f1f3f5;
    --text: #0f1721;
    --muted-text: #475569;
    --accent: #0ea5e9;
    /* sky-500 */
    --accent-foreground: #ffffff;
    --border: #e6edf3;
    --shadow: rgba(15, 23, 33, 0.06);
    --link: #0369a1;
    --success: #16a34a;
    --danger: #dc2626;

    /* utilities */
    --glass-bg: rgba(255, 255, 255, 0.6);
}

/* Dark theme overrides */
:root[data-theme='dark'],
:root.theme-dark {
    --bg: #0b1020;
    --surface: #0f1724;
    --muted-surface: #0b1220;
    --text: #e6eef6;
    --muted-text: #94a3b8;
    --accent: #60a5fa;
    /* blue-400 */
    --accent-foreground: #0b1220;
    --border: rgba(255, 255, 255, 0.06);
    --shadow: rgba(2, 6, 23, 0.6);
    --link: #7dd3fc;
    --success: #34d399;
    --danger: #f97316;

    --glass-bg: rgba(10, 12, 18, 0.6);
}

/* Respect system preference by default (applies to :root when no explicit data-theme/class set) */
@media (prefers-color-scheme: dark) {
    :root:not([data-theme]):not(.theme-light) {
        --bg: #0b1020;
        --surface: #0f1724;
        --muted-surface: #0b1220;
        --text: #e6eef6;
        --muted-text: #94a3b8;
        --accent: #60a5fa;
        --accent-foreground: #0b1220;
        --border: rgba(255, 255, 255, 0.06);
        --shadow: rgba(2, 6, 23, 0.6);
        --link: #7dd3fc;
        --glass-bg: rgba(10, 12, 18, 0.6);
    }
}

/* Apply theme variables to common elements */
html,
body {
    background-color: var(--bg);
    color: var(--text);
}

/* Surface elements like cards, headers, footers */
.card,
.surface {
    background-color: var(--surface);
    border: 1px solid var(--border);
    box-shadow: 0 6px 20px var(--shadow);
    color: var(--text);
}

a {
    color: var(--link);
}

button,
.btn {
    background-color: var(--accent);
    color: var(--accent-foreground);
    border: 1px solid transparent;
}

/* Small helpers */
.muted {
    color: var(--muted-text);
}

.muted-surface {
    background-color: var(--muted-surface);
}

.bordered {
    border: 1px solid var(--border);
}

/* Image helper: optional image inversion for dark mode where needed */
:root:not([data-theme='dark']):not(.theme-dark) .invert-in-dark {
    filter: none;
}

:root[data-theme='dark'] .invert-in-dark,
:root.theme-dark .invert-in-dark,
.theme-dark .invert-in-dark {
    filter: invert(1) hue-rotate(180deg) saturate(0.9);
}

/* Theme toggle control (minimal styling for a visible toggle) */
.theme-toggle {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.35rem 0.6rem;
    border-radius: 999px;
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.04), rgba(0, 0, 0, 0.02));
    border: 1px solid var(--border);
    color: var(--text);
    cursor: pointer;
    font-weight: 600;
}

/* Smooth transitions (respect reduce-motion preference) */
:root {
    --theme-transition: background-color 220ms ease, color 220ms ease, border-color 220ms ease, box-shadow 220ms ease, fill 220ms ease;
}

@media (prefers-reduced-motion: no-preference) {
    * {
        transition: var(--theme-transition);
    }
}

/* Small accessibility helpers */
.sr-only {
    position: absolute !important;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Example: a subtle glass surface for overlays */
.glass {
    background: var(--glass-bg);
    border: 1px solid var(--border);
    backdrop-filter: blur(6px) saturate(1.05);
}

/* -- Usage notes (copy into your HTML/JS) --
	1) Add data attribute to root to force theme:
		 <html data-theme="dark"> or <html data-theme="light">

	2) Alternatively add class to <body>:
		 <body class="theme-dark"> or <body class="theme-light">

	3) Quick JS toggle snippet to persist choice in localStorage:
		 const applyTheme = (theme) => {
			 document.documentElement.setAttribute('data-theme', theme);
			 localStorage.setItem('theme', theme);
		 };
		 const saved = localStorage.getItem('theme');
		 if (saved) applyTheme(saved);
		 // Toggle example
		 // applyTheme(document.documentElement.getAttribute('data-theme') === 'dark' ? 'light' : 'dark');

	4) If you prefer using classes on body, replace document.documentElement.setAttribute calls with document.body.classList.
*/